name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install OpenCV
      run: |
           sudo apt install build-essential cmake git pkg-config libgtk-3-dev \
           libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
           libxvidcore-dev libx264-dev libjpeg-dev libpng-dev libtiff-dev \
           gfortran openexr libatlas-base-dev python3-dev python3-numpy \
           libtbb2 libtbb-dev libdc1394-22-dev libopenexr-dev \
           libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev
           sudo mkdir ~/opencv_build && cd ~/opencv_build
           sudo git clone https://github.com/opencv/opencv.git
           sudo git clone https://github.com/opencv/opencv_contrib.git
           cd ~/opencv_build/opencv
           sudo mkdir -p build && cd build
           sudo cmake -D CMAKE_BUILD_TYPE=RELEASE \
           -D CMAKE_INSTALL_PREFIX=/usr/local \
           -D INSTALL_C_EXAMPLES=ON \
           -D INSTALL_PYTHON_EXAMPLES=ON \
           -D OPENCV_GENERATE_PKGCONFIG=ON \
           -D OPENCV_EXTRA_MODULES_PATH=~/opencv_build/opencv_contrib/modules \
           -D BUILD_EXAMPLES=ON ..
           sudo make -j$(nproc)
           sudo make install
        
    - name: Install boost
      run: sudo apt-get install libboost-all-dev
      
    - name: Install systemd
      run: sudo apt install libsystemd-dev


    - name: submodules
      run: sudo git submodule update --init --recursive

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: sudo cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: sudo cmake .
      
    - name: Run make
      run: sudo make
